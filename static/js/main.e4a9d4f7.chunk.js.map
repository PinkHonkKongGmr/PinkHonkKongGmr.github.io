{"version":3,"sources":["helpers/arrayCreator.js","store/trades/actions.js","store/trades/actionTypes.js","consts/buttontext.js","components/gameObjects/cells/cell.js","store/gameObjects/actions.js","store/gameObjects/actionTypes.js","components/gameFoos/field/field.js","consts/warnings.js","consts/indicators.js","components/gameObjects/goldMine/goldMine.js","components/gameFoos/infoList/infoList.js","drugInheritance/drugger/index.js","store/generators/actions.js","store/generators/actionTypes.js","consts/sold.js","consts/buy.js","consts/upgrade.js","consts/names.js","components/gameObjects/animals/chickens/chickens.js","store/dragged/actions.js","store/dragged/actionTypes.js","components/gameObjects/animals/cows/cows.js","components/gameObjects/rye/rye.js","components/gameFoos/trades/trades.js","consts/curs.js","components/gameFoos/curs/curs.js","consts/product.js","components/gameFoos/market/market.js","consts/text.js","components/hopups/instruction/instruction.js","components/hocs/main.js","App.js","serviceWorker.js","store/initialState.js","store/dragged/reducer.js","store/generators/reducer.js","store/gameObjects/reducer.js","store/trades/reducer.js","index.js","store/index.js","store/reducers.js"],"names":["arrayCreator","lenght","arr","i","push","incrementmoney","sum","type","payload","discrementmoney","buttontext","harvest","milk","pick","feed","next","prev","clear","notClear","soldLand","buyLand","soldContent","soldEggs","soldMilk","declarate","deleteRye","Cell","props","onDragOverHandler","e","preventDefault","deleteDrager","removeDrag","state","mountedId","setState","droped","buttonSatus","cellClass","onDropHandler","setCurrentId","setCell","id","dataTransfer","getData","content","contentLocal","ref","current","sold","getProfit","removeCell","cellToRemoveOn","ind","React","createRef","tradeButton","this","Button","className","onClick","indexOf","onDrop","onDragOver","Component","actionCreators","drugId","cell","idToRemove","trades","cellToRemoveInd","cellToRemove","connect","chickCount","dragged","chickens","ryeCount","rye","FarmField","buyCell","cash","newkye","uniqid","addCell","spend","cells","key","noCellsToAdd","cellCount","map","el","filter","cellToRemoveOff","cellToAdd","gameObjects","money","warnings","infinity","indicators","max","permin","best","list","GoldMine","timeSeconds","Date","getSeconds","timeMinutes","getMinutes","seconds","prevTimeSeconds","minutes","prevTimeMinutes","toFixed","profitPerTime","Infinity","datClass","infoList","infoArray","nameOfClass","cowCount","cow","food","generators","eggs","Drugger","removeController","removeControllerInterval","setInterval","container","homeContainer","product","status","clearInterval","interval","sellPrice","removeMethod","foodStatusController","console","log","foodControlRef","style","backgroundColor","generateStatusController","q","proc","proceed","generateControlRef","height","colorBack","generator","countDown","timeToGenerate","stateActions","sumProductUp","upgrade","control","sumProduct","deal","cost","onStart","setData","name","onDragEndHandler","method","harvester","document","createElement","querySelector","appendChild","balls","tosee","dealOpportunity","classNames","value","feedind","element","draggable","onDragStart","onDragEnd","controlElements","ReactDom","createPortal","buyPrice","threshold","plus","limit","minus","names","chicken","Chicken","takeAfood","commonFood","alert","addChick","removeChick","count","Cow","addCow","removeCow","newCount","cows","Rye","ttg","addRye","removeRye","div","Trades","resetEggs","sell","resetMilk","curs","ru","today","egg","land","Curs","Market","ryes","instruction","titleRu","Instruction","rule","visible","page","lists","setButton","sign","parseInt","match","nextHandler","prevHandler","closeOpen","body","rules","btnClassNext","btnClassPrev","popupClass","MainHoc","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","position","resurses","mapReducer","action","newValueChic","incrementChick","newValueCow","incrementCow","newValueRye","incrementRye","newValueChic2","incrementChick2","newValueCow2","incrementCow2","newValueRye2","incrementRye2","incrementHarvest","dincrementHarvest","putEgg","incremenEgg","incrementMilk","nullEgg","nullMilk","money2","store","createStore","combineReducers","subscribe","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4a9d4f7.chunk.js","sourcesContent":["\r\n\r\nconst arrayCreator =(lenght)=>{\r\n    const arr =[]\r\n    for(let i=0;i<lenght;i++){\r\n        arr.push(i)\r\n    }\r\n\r\n    return arr\r\n}\r\n\r\n\r\nexport default arrayCreator;","import * as types from './actionTypes'\r\n\r\nexport const incrementmoney = (sum) =>{\r\n    return {\r\n        type: types.incrementmoney,\r\n        payload:{\r\n            sum\r\n        }\r\n    }\r\n}\r\n\r\nexport const discrementmoney = (sum) =>{\r\n    return {\r\n        type: types.discrementmoney,\r\n        payload: {\r\n            sum\r\n        }\r\n    }\r\n}\r\n\r\n","const incrementmoney = 'trades.incrementmoney'\r\nconst discrementmoney = 'trades.discrementmoney'\r\nexport {\r\n    incrementmoney,\r\n    discrementmoney,\r\n}","const buttontext ={\r\n    ru:{\r\n        harvest: \"Пожать\",\r\n        milk: \"Подоить\",\r\n        pick: \"Собрать\",\r\n        feed: \"Покормиц\",\r\n        next: \"Вперед\",\r\n        prev: \"Назад\",\r\n        clear: \"Все ясно\",\r\n        notClear: \"Не все ясно\",\r\n        soldLand: \"Продать землю\",\r\n        buyLand: \"А не купить ли мне земли?\",\r\n        soldContent: \"Продать \",\r\n        soldEggs: \"Продать ики\",\r\n        soldMilk: \"Продать милк\",\r\n        declarate: \"Декларировать\",\r\n        deleteRye: \"Уничтожить посев\"\r\n    }\r\n\r\n}\r\n\r\nexport {buttontext}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actionGameObjects from '../../../store/gameObjects/actions';\r\nimport * as trades from '../../../store/trades/actions';\r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport { Button } from 'reactstrap';\r\nimport './cells.scss';\r\n\r\n\r\n\r\nclass Cell extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            droped:false,\r\n            mountedId:null,\r\n            buttonSatus: 'hidden',\r\n            cellClass:'cell empty'\r\n        }\r\n        this.content = null\r\n        this.contentLocal = null\r\n        this.ref = React.createRef()\r\n    }\r\n\r\n\r\n    onDragOverHandler =(e)=>{\r\n        e.preventDefault();\r\n    }\r\n\r\n    deleteDrager =() =>{\r\n        const  {removeDrag} = this.props\r\n        removeDrag(this.state.mountedId)\r\n        this.setState({droped:false, buttonSatus:'hidden', cellClass:'cell empty'})\r\n    }\r\n\r\n    onDropHandler = (e)=>{\r\n        const  {setCurrentId, setCell} = this.props\r\n\r\n       const id =  e.dataTransfer\r\n        .getData('id');\r\n\r\n        this.content =  e.dataTransfer\r\n        .getData('content');\r\n\r\n        this.contentLocal =  e.dataTransfer\r\n        .getData('contentLocal');\r\n       \r\n        const cellClass = `${this.content}`\r\n\r\n        if (!this.state.droped){\r\n            this.setState({mountedId:id, droped:true,buttonSatus:'shown', cellClass: `cell ${cellClass}`})\r\n            setCurrentId(id)\r\n            setCell(this.ref.current)\r\n        }\r\n    }\r\n\r\n    sold = () =>{\r\n        const {getProfit, removeCell, cellToRemoveOn} = this.props\r\n        getProfit(500);\r\n        removeCell(this.props.ind);\r\n        cellToRemoveOn();\r\n        \r\n\r\n\r\n    }\r\n \r\n\r\n    render(){\r\n            const tradeButton = this.state.droped ? null : <Button className = 'sell__cell' onClick = {this.sold}>{buttontext.ru.soldLand}</Button>\r\n            const soldContent = this.state.cellClass.indexOf('rye') === -1 ? `${buttontext.ru.soldContent} ${this.contentLocal}`\r\n            : `${buttontext.ru.deleteRye}`\r\n            return <div className= {this.state.cellClass} onDrop = {this.onDropHandler} onDragOver = {this.onDragOverHandler} ref ={this.ref}>\r\n                <Button onClick={this.deleteDrager} className={this.state.buttonSatus}>{soldContent}</Button>  \r\n                {tradeButton } \r\n            </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n      chickCount: state.dragged.chickens,\r\n      ryeCount: state.dragged.rye,\r\n    };\r\n    return props;\r\n  };\r\n  \r\n  const actionCreators = {\r\n    setCurrentId: actionGameObjects.setCurrentId,\r\n    setCell: actionGameObjects.setCell,\r\n    removeDrag: actionGameObjects.removeDrag,\r\n    getProfit: trades.incrementmoney,\r\n    removeCell: actionGameObjects.removeCell,\r\n    cellToRemoveOn: actionGameObjects.cellToRemoveOn\r\n  };\r\n  \r\n  export default connect(mapStateToProps, actionCreators)(Cell);\r\n\r\n","import * as types from './actionTypes';\r\n\r\n  \r\nexport const setCurrentId = drugId => {\r\n    return {\r\n      type: types.setCurrentId,\r\n      payload: {\r\n        drugId\r\n      },\r\n    };\r\n  };\r\n\r\n  export const removeDrag = idToRemove => {\r\n    return {\r\n      type: types.removeDrag,\r\n      payload: {\r\n        idToRemove\r\n      },\r\n    };\r\n  };\r\n\r\n  export const setCell = cell => {\r\n\r\n    return {\r\n      type: types.setCell,\r\n      payload:{\r\n        cell\r\n      }\r\n    };\r\n  };\r\n\r\n  export const addCell = () => {\r\n    return {\r\n      type: types.addCell,\r\n      payload: {\r\n        cellToAdd: true\r\n      },\r\n    };\r\n  };\r\n\r\n  export const noCellsToAdd = () => {\r\n    return {\r\n      type: types.noCellsToAdd,\r\n      payload: {\r\n        cellToAdd: false\r\n      },\r\n    };\r\n  };\r\n\r\n  export const removeCell = (ind) => {\r\n    return {\r\n      type: types.removeCell,\r\n      payload: {\r\n        cellToRemoveInd: ind\r\n      },\r\n    };\r\n  };\r\n\r\n  export const cellToRemoveOn = () => {\r\n    return {\r\n      type: types.removeDrag,\r\n      payload: {\r\n        cellToRemove: true\r\n      },\r\n    };\r\n  };\r\n\r\n  export const cellToRemoveOff = () => {\r\n    return {\r\n      type: types.removeDrag,\r\n      payload: {\r\n        cellToRemove: false,\r\n        cellToRemoveInd: null\r\n      },\r\n    };\r\n  };","const setCurrentId = 'gameobjects.setCurrentId';\r\nconst removeDrag = 'gameobjects.removeDrag';\r\nconst setCell = 'gameobjects.setCell';\r\nconst addCell = 'gameobjects.addCell';\r\nconst removeCell = 'gameobjects.removeCell';\r\nconst cellToRemoveOn ='gameobjects.cellToRemoveOn'\r\nconst cellToRemoveOff ='gameobjects.cellToRemoveOff'\r\nconst noCellsToAdd ='gameobjects.noCellsToAdd'\r\n\r\nexport {\r\n    setCurrentId,\r\n    removeDrag,\r\n    setCell,\r\n    addCell,\r\n    removeCell,\r\n    cellToRemoveOn,\r\n    cellToRemoveOff,\r\n    noCellsToAdd,\r\n   \r\n};","import React from 'react'\r\nimport arrayCreator from '../../../helpers/arrayCreator.js'\r\nimport Cell from '../../gameObjects/cells/cell.js'\r\nimport './field.scss'\r\nimport { Button } from 'reactstrap';\r\nimport {connect} from 'react-redux'\r\nimport * as actionGameObjects from '../../../store/gameObjects/actions';\r\nimport * as trades from '../../../store/trades/actions';\r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport uniqid from 'uniqid'\r\n\r\n\r\nclass FarmField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.cells = arrayCreator(this.props.cellCount).map((el,ind)=><Cell key={ind} ind={ind}></Cell>)\r\n    }\r\n\r\n    buyCell = () =>{\r\n        if(this.props.cash > 999)\r\n        {let newkye= uniqid()\r\n            const {addCell, spend} = this.props\r\n            spend(1000);\r\n            this.cells = [...this.cells,  <Cell key={newkye} ind={newkye}></Cell>]\r\n            addCell()\r\n            this.props.noCellsToAdd();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n       if(this.props.cellToRemove) \r\n         {\r\n            this.cells = this.cells.filter((cell)=> cell.props.ind !== this.props.cellToRemoveInd)\r\n        }   \r\n        this.props.cellToRemoveOff()\r\n        return <div className='field'>{this.cells}\r\n            <Button onClick ={this.buyCell} className = \"buyLand\">{buttontext.ru.buyLand}</Button>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps =state =>{\r\n    const props ={\r\n       cellCount: state.gameObjects.cellCount,\r\n       cellToRemove: state.gameObjects.cellToRemove,\r\n       cellToRemoveInd: state.gameObjects.cellToRemoveInd,\r\n       cellToAdd: state.gameObjects.cellToAdd,\r\n       cash: state.trades.money\r\n   }\r\n   return props\r\n}\r\n\r\n\r\nconst actionCreators = {\r\n    addCell: actionGameObjects.addCell,\r\n    spend: trades.discrementmoney,\r\n    cellToRemoveOff: actionGameObjects.cellToRemoveOff,\r\n    noCellsToAdd: actionGameObjects.noCellsToAdd\r\n  };\r\n\r\nexport default connect(mapStateToProps, actionCreators)(FarmField)","const warnings ={\r\n    ru:{\r\n       infinity :\"ну и зачем?\"\r\n    }\r\n\r\n}\r\n\r\nexport {warnings}","const indicators ={\r\n    ru:{\r\n       max: \"Максимальный баланс\",\r\n       permin: \"Заработано\\\\мин\",\r\n       best: \"Лучший показатель\",\r\n       list: ['Мухрю','Чикены','Рош','Еда', 'Всего ик', 'Надой']\r\n    }\r\n\r\n}\r\n\r\nexport {indicators}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Button } from 'reactstrap';\r\nimport * as trades from '../../../store/trades/actions';\r\nimport './goldMine.scss' \r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport  {warnings} from '../../../consts/warnings.js';\r\nimport  {indicators} from '../../../consts/indicators.js';\r\n\r\n\r\n\r\nclass GoldMine extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.timeSeconds = null;\r\n        this.timeMinutes = null;\r\n        this.prevTimeSeconds = new Date().getSeconds()\r\n        this.prevTimeMinutes = new Date().getMinutes()\r\n        this.best = 0;\r\n        this.max = this.props.money\r\n        this.state ={\r\n            profitPerTime:0,\r\n            money:this.props.money,\r\n            best:0\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    declarate =() =>{\r\n        const {spend} = this.props;\r\n        spend(this.props.money * 0.12)\r\n        this.timeSeconds = new Date().getSeconds()\r\n        this.timeMinutes = new Date().getMinutes()\r\n        const seconds = (this.timeSeconds - this.prevTimeSeconds) / 60;\r\n        const minutes = (this.timeMinutes - this.prevTimeMinutes + seconds).toFixed(2)\r\n        this.setState({profitPerTime:(this.props.money - this.state.money) / minutes})\r\n        this.setState({money: this.props.money})\r\n        this.prevTimeSeconds = this.timeSeconds\r\n        this.prevTimeMinutes = this.timeMinutes\r\n    }\r\n\r\n\r\n    render(){\r\n        const profitPerTime = this.state.profitPerTime === -Infinity ? warnings.ru.infinity : this.state.profitPerTime.toFixed(2)\r\n        this.best = this.best > this.state.profitPerTime ? this.best : this.state.profitPerTime.toFixed(2)\r\n        this.max = this.max > this.props.money ? this.max : this.props.money\r\n        let datClass = this.props.money > 0 ? 'green val' : 'red val'\r\n        return <div className = \"value\">\r\n            Голда: <span className = {datClass}>{this.props.money.toFixed(0)}</span>\r\n            <div className ='statistic'>\r\n                <div className = 'max'>{indicators.ru.max}: {this.max}</div>\r\n                <div className = 'profit'>{indicators.ru.permin}: {profitPerTime}</div>\r\n                <div className = 'best'>{indicators.ru.best}: {this.best}</div>\r\n                <Button className ='btnDeclr' onClick={this.declarate}>{buttontext.ru.declarate}</Button>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps =state =>{\r\n     const props ={\r\n        money: state.trades.money\r\n    }\r\n    return props\r\n}\r\n\r\nconst actionCreators = {\r\n    spend: trades.discrementmoney,\r\n  };\r\n\r\nexport default connect(mapStateToProps, actionCreators)(GoldMine)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './info.scss'; \r\nimport GoldMine from '../../gameObjects/goldMine/goldMine.js'\r\nimport  {indicators} from '../../../consts/indicators.js';\r\n\r\n\r\nclass infoList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={}\r\n    }\r\n\r\n  \r\n \r\n    render(){\r\n        let i = 0;\r\n        const list = indicators.ru.list\r\n        let infoArray =[];\r\n        for (let key in this.props){\r\n            if(key !== 'dispatch')\r\n            {\r\n                const nameOfClass = this.props[key] > 0 ? 'val green' : 'val red'\r\n                infoArray.push(<div className='value' key ={i}>{list[i]}: <span className={nameOfClass}>{this.props[key]}</span></div>)\r\n                i++;\r\n            }\r\n        }\r\n        infoArray = [...infoArray, <GoldMine key =\"goldmine\"></GoldMine>]\r\n    \r\n        return <div className = 'infolist'>\r\n                    {infoArray}\r\n                </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n      cowCount: state.dragged.cow,  \r\n      chickCount: state.dragged.chickens,\r\n      ryeCount: state.dragged.rye,\r\n      food: state.generators.food,\r\n      eggs: state.generators.eggs,\r\n      milk: state.generators.milk,\r\n    };\r\n    return props;\r\n  };\r\n\r\n\r\n  \r\n  export default connect(mapStateToProps)(infoList);","import React from 'react'\r\nimport uniqid from 'uniqid'\r\nimport ReactDom from 'react-dom'\r\nimport './common.scss' \r\n\r\n\r\nclass Drugger extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.homeContainer = document.createElement('div')\r\n        document.querySelector('body').appendChild(this.homeContainer)\r\n        this.container = this.homeContainer\r\n        this.id = uniqid()\r\n        this.method = null;\r\n        this.removeMethod = null;\r\n        this.state ={dragged:false}\r\n        this.contentLocal = null;\r\n        this.timeToGenerate = null \r\n        this.balls = null\r\n    }\r\n\r\n    removeController =()=>{\r\n        const {getProfit} = this.props\r\n        this.removeControllerInterval = setInterval(()=>{\r\n            if(this.props.idToRemove === this.id){\r\n                this.id= uniqid()\r\n                this.container=this.homeContainer\r\n                this.setState({dragged:false, product:0, status:this.status})\r\n                clearInterval(this.interval, this.removeControllerInterval)\r\n                getProfit(this.sellPrice)\r\n                this.removeMethod()\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    foodStatusController = () => {\r\n        console.log('this.state.food', this.foodControlRef.current)\r\n        this.state.food > 0 ? this.foodControlRef.current.style.backgroundColor = '#b2ec5d' :\r\n        this.foodControlRef.current.style.backgroundColor = 'rgb(253, 71, 71)'\r\n    }\r\n    \r\n    generateStatusController = (q, proc) => {\r\n        const proceed = q * proc\r\n        if(proceed > 0 && proceed < 25){\r\n          this.generateControlRef.current.style.backgroundColor = '#ffff66'\r\n        }\r\n        if(proceed > 15 && proceed < 27){\r\n          this.generateControlRef.current.style.backgroundColor = '#fff44f'\r\n        }\r\n        if(proceed > 27 && proceed < 50){\r\n          this.generateControlRef.current.style.backgroundColor = '#ced23a'\r\n        }\r\n        if(proceed > 50 && proceed < 76){\r\n          this.generateControlRef.current.style.backgroundColor = '#b2ec5d'\r\n        }\r\n        if(proceed > 82 && proceed < 100){\r\n          this.generateControlRef.current.style.backgroundColor = '#5da130'\r\n        }\r\n        this.generateControlRef.current.style.height = `${proceed}%`\r\n      }\r\n\r\n      colorBack = () => this.generateControlRef.current.style.backgroundColor = 'rgb(253, 71, 71)'\r\n\r\n    generator = () =>{\r\n        let countDown = 0 \r\n        this.interval = setInterval(()=>{\r\n        this.foodStatusController()    \r\n        if(this.state.food > 0){\r\n        countDown ++;\r\n        const q = 5/this.timeToGenerate \r\n        this.generateStatusController(q, countDown)\r\n        if(countDown === this.timeToGenerate * 20)\r\n        {countDown = 0;  \r\n        this.colorBack()       \r\n        this.stateActions()\r\n        this.sumProductUp();\r\n        this.upgrade()\r\n        this.control()\r\n      };\r\n      }\r\n    },50)\r\n   }\r\n\r\n    \r\n   sumProductUp = () => this.sumProduct = this.sumProduct + 1\r\n    \r\n\r\n    deal = () => {\r\n      const {spend} = this.props\r\n        spend(this.cost);\r\n    }\r\n\r\n\r\n    onStart= (e)=>{\r\n        e.dataTransfer\r\n        .setData('id', this.id)\r\n        \r\n        e.dataTransfer\r\n        .setData('content', `${this.props.name}_inside`);\r\n\r\n        e.dataTransfer\r\n        .setData('contentLocal', `${this.contentLocal}`);\r\n    }\r\n\r\n    onDragEndHandler = () => {\r\n        if(this.props.id === this.id && !this.state.dragged){\r\n            this.deal()\r\n            this.setState({dragged:true, status:`dragged dragged_${this.props.name}`})\r\n            this.container = this.props.cell\r\n            this.removeController()\r\n            this.method()\r\n            this.generator()\r\n                   \r\n        }\r\n    }\r\n\r\n    harvest=()=>{\r\n        this.props.harvester(this.state.product)\r\n        this.setState({product:0})\r\n    }\r\n\r\n    render(){ \r\n        \r\n       const tosee = this.dealOpportunity()? 'visible' : 'none'\r\n       const classNames = `${this.props.name} ${this.state.status} household ${tosee}`\r\n       const product = this.state.dragged ? this.props.product : ''  \r\n       const value = this.state.dragged ? this.state.product : ''    \r\n       const feedind = this.props.name !=='rye' ? <div className = 'ball'>{this.state.food}</div> :null\r\n       const element = <div className ={classNames}\r\n            draggable={!this.state.dragged} \r\n            onDragStart={this.onStart} \r\n            onDragEnd={this.onDragEndHandler} \r\n        >\r\n\r\n    <div>{product} {this.controlElements}{value}{feedind}</div>\r\n        </div>\r\n\r\n        \r\n        return ReactDom.createPortal(element, this.container)\r\n    }\r\n\r\n}\r\n\r\nexport default Drugger\r\n\r\n\r\n","import * as types from './actionTypes';\r\n\r\n\r\n\r\nexport const harvester = (count) => {\r\n    return {\r\n      type: types.harvester,\r\n      payload: {\r\n        count\r\n      },\r\n    };\r\n  };\r\n\r\n  export const feed = () => {\r\n    return {\r\n      type: types.feed\r\n    };\r\n  };\r\n\r\n\r\n\r\n  export const putEggs = (count) => {\r\n    return {\r\n      type: types.putEggs,\r\n      payload: {\r\n        count\r\n      },\r\n    };\r\n  };\r\n\r\n  export const milkCow = (count) => {\r\n    return {\r\n      type: types.milkCow,\r\n      payload: {\r\n        count\r\n      },\r\n    };\r\n  };\r\n\r\n  export const resetEggs = () => {\r\n    return {\r\n      type: types.resetEggs\r\n    };\r\n  };\r\n\r\n  export const resetMilk = () => {\r\n    return {\r\n      type: types.resetMilk\r\n    };\r\n  };\r\n\r\n","const harvester = 'generators.harvester';\r\nconst feed = 'generators.feed';\r\nconst putEggs = 'generators.putEggs';\r\nconst milkCow = 'generators.milkCow';\r\nconst resetEggs = 'generators.resetEggs'\r\nconst resetMilk = 'generators.resetMilk'\r\n\r\nexport {\r\n    harvester,\r\n    feed,\r\n    putEggs,\r\n    milkCow,\r\n    resetEggs,\r\n    resetMilk\r\n};","const sellPrice ={\r\n    cell:500,\r\n    cow:100,\r\n    chicken:40,\r\n    rye:0,\r\n    egg:6,\r\n    milk:15\r\n\r\n}\r\n\r\nexport {sellPrice}","const buyPrice ={\r\n    cell:1000,\r\n    cow:300,\r\n    chicken:90,\r\n    rye:400,\r\n    egg:10,\r\n    milk:20\r\n\r\n}\r\n\r\nexport {buyPrice}","const upgrade ={\r\n    cow:{\r\n        timeToGenerate:20,\r\n        threshold:30,\r\n        plus:2,\r\n        limit:4\r\n    },\r\n    chicken:{\r\n        timeToGenerate:10,\r\n        threshold:100,\r\n        minus:1,\r\n        limit:7\r\n    },\r\n    rye:{\r\n        timeToGenerate:10,\r\n    },\r\n}\r\n\r\nexport {upgrade}","const names ={\r\n    ru:{\r\n        chicken: \"чикен\",\r\n        cow: \"мухрю\",\r\n        rye: \"рош\"\r\n    }\r\n\r\n}\r\n\r\nexport {names}","import React from 'react'\r\nimport Drugger from '../../../../drugInheritance/drugger/index.js'\r\nimport { Button } from 'reactstrap';\r\nimport './chickens.scss' \r\nimport { connect } from 'react-redux';\r\nimport * as draggedActions from '../../../../store/dragged/actions';\r\nimport * as generators from '../../../../store/generators/actions';\r\nimport * as trades from '../../../../store/trades/actions';\r\nimport  {sellPrice} from '../../../../consts/sold.js';\r\nimport  {buyPrice} from '../../../../consts/buy.js';\r\nimport  {upgrade} from '../../../../consts/upgrade.js';\r\nimport  {buttontext} from '../../../../consts/buttontext.js';\r\nimport  {names} from '../../../../consts/names.js';\r\nimport uniqid from 'uniqid'\r\n\r\nclass Chicken extends Drugger{\r\n    constructor(props){\r\n        super(props)\r\n        this.method = this.props.addChick\r\n        this.removeMethod = this.props.removeChick\r\n        this.status  = `wait_for_drag wait_for_drag-${this.props.name}`\r\n        this.state ={\r\n        status: this.status,\r\n        product:0,\r\n        food:0\r\n       } \r\n       this.generateControlRef = React.createRef();\r\n       this.foodControlRef = React.createRef();\r\n       this.controlElements = [<Button key = {uniqid()} className=\"btn-info feed\" onClick={this.feed}>{buttontext.ru.feed}</Button>\r\n       ,<Button key = {uniqid()} className=\"btn-info harvest\" onClick={this.harvest}>{buttontext.ru.pick}</Button>\r\n      ,<div className = \"food__indicator\" key = {uniqid()} ref = {this.foodControlRef}></div>\r\n       ,<div className = \"generate__indicator\" key = {uniqid()}><div className = \"scale\" ref = {this.generateControlRef}></div></div>]\r\n       this.sumProduct = 0;\r\n       this.timeToGenerate = upgrade.chicken.timeToGenerate\r\n       this.cost = buyPrice.chicken;\r\n       this.sellPrice = sellPrice.chicken;\r\n       this.contentLocal = names.ru.chicken\r\n    }\r\n\r\n    dealOpportunity = () => this.props.money < this.cost ? false : true \r\n\r\n\r\n    upgrade = () => this.timeToGenerate = this.sumProduct % upgrade.chicken.threshold === 0 ? this.timeToGenerate - upgrade.chicken.minus\r\n                    : this.timeToGenerate\r\n    \r\n    control = () => this.timeToGenerate = this.timeToGenerate < upgrade.chicken.limit ? upgrade.chicken.limit : this.timeToGenerate              \r\n\r\n    stateActions = () => {\r\n      this.setState((state) => {\r\n        return {food: state.food -1, product:state.product + 1}\r\n      })\r\n    }\r\n\r\n\r\n    takeAfood = () => {\r\n      this.props.feed()\r\n      this.setState((state) => {\r\n      return {food: state.food + 1 * 3}\r\n    });\r\n   }\r\n\r\n    feed =  () =>{\r\n      this.props.commonFood > 0 ? this.takeAfood() : alert('not enought food')\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n      id: state.gameObjects.drugId,\r\n      cell: state.gameObjects.cell,\r\n      idToRemove: state.gameObjects.idToRemove,\r\n      commonFood: state.generators.food,\r\n      money: state.trades.money\r\n    };\r\n    return props;\r\n  };\r\n\r\n  const actionCreators = {\r\n    addChick: draggedActions.addChick,\r\n    removeChick: draggedActions.removeChick,\r\n    feed: generators.feed,\r\n    harvester: generators.putEggs,\r\n    spend: trades.discrementmoney,\r\n    getProfit: trades.incrementmoney,\r\n  };\r\n  \r\n  export default connect(mapStateToProps, actionCreators)(Chicken);","import * as types from './actionTypes';\r\n\r\nexport const addChick = ()=> {\r\n    return {\r\n      type: types.addChicken\r\n    };\r\n  };\r\n\r\n  export const addRye = () => {\r\n    return {\r\n      type: types.addRye\r\n    };\r\n  };\r\n\r\n  \r\nexport const addCow = newCount => {\r\n    return {\r\n      type: types.addCow,\r\n      payload: {\r\n        cows: newCount,\r\n      },\r\n    };\r\n  };\r\n\r\n  export const removeChick = ()=> {\r\n    return {\r\n      type: types.removeChicken\r\n    };\r\n  };\r\n\r\n  export const removeRye = () => {\r\n    return {\r\n      type: types.removeRye\r\n    };\r\n  };\r\n\r\n  \r\nexport const removeCow = newCount => {\r\n    return {\r\n      type: types.removeCow,\r\n    };\r\n  };","const addChicken = 'dragged.addChicken';\r\nconst addCow = 'dragged.addCow';\r\nconst addRye = 'dragged.addRye';\r\nconst removeChicken = 'dragged.removeChicken';\r\nconst removeCow = 'dragged.removeCow';\r\nconst removeRye = 'dragged.removeRye';\r\n\r\n\r\nexport {\r\n    addChicken,\r\n    addCow,\r\n    addRye,\r\n    removeChicken,\r\n    removeCow,\r\n    removeRye\r\n};","import React from 'react'\r\nimport Drugger from '../../../../drugInheritance/drugger/index.js'\r\nimport { Button } from 'reactstrap';\r\nimport './cows.scss' \r\nimport { connect } from 'react-redux';\r\nimport * as draggedActions from '../../../../store/dragged/actions';\r\nimport * as generators from '../../../../store/generators/actions';\r\nimport * as trades from '../../../../store/trades/actions';\r\nimport  {sellPrice} from '../../../../consts/sold.js';\r\nimport  {buyPrice} from '../../../../consts/buy.js';\r\nimport  {upgrade} from '../../../../consts/upgrade.js';\r\nimport  {buttontext} from '../../../../consts/buttontext.js';\r\nimport  {names} from '../../../../consts/names.js';\r\nimport uniqid from 'uniqid'\r\n\r\nclass Cow extends Drugger{\r\n    constructor(props){\r\n        super(props)\r\n        this.method = this.props.addCow\r\n        this.removeMethod = this.props.removeCow\r\n        this.status  = `wait_for_drag wait_for_drag-${this.props.name}`\r\n        this.generateControlRef = React.createRef()\r\n        this.foodControlRef = React.createRef();\r\n        this.controlElements = [<Button key = {uniqid()} className=\"btn-info feed\" onClick={this.feed}>{buttontext.ru.feed}</Button>,\r\n                         <Button key = {uniqid()} className=\"btn-info harvest\" onClick={this.harvest}>{buttontext.ru.milk}</Button>\r\n                         ,<div className = \"food__indicator\" key = {uniqid()} ref = {this.foodControlRef}></div>\r\n                         ,<div className = \"generate__indicator\" key = {uniqid()}><div className = \"scale\" ref = {this.generateControlRef}></div></div>];\r\n        this.state ={\r\n        status: this.status,\r\n        product:0,\r\n        food:0\r\n       } \r\n       this.cost = buyPrice.cow;\r\n       this.sellPrice = sellPrice.cow;\r\n       this.plus = 0;\r\n       this.sumProduct = 0;\r\n       this.timeToGenerate = upgrade.cow.timeToGenerate\r\n       this.contentLocal = names.ru.cow\r\n       this.timeToGenerate = upgrade.cow.timeToGenerate\r\n    }\r\n\r\n    dealOpportunity = () => this.props.money < this.cost ? false : true\r\n\r\n    sumProductUp = () => this.sumProduct = this.sumProduct + 1 + this.plus\r\n    \r\n    upgrade = () => {\r\n      if (this.sumProduct > upgrade.cow.threshold ||  this.sumProduct === upgrade.cow.threshold)\r\n          { this.plus = this.plus + upgrade.cow.plus\r\n            this.sumProduct = 0\r\n        }\r\n    }\r\n                   \r\n    \r\n    control = () => this.plus = this.plus > upgrade.cow.limit ? upgrade.cow.limit : this.plus              \r\n\r\n    stateActions = () => {\r\n      this.setState((state) => {\r\n        return {food: state.food -1, product:state.product + 1 + this.plus}\r\n      })\r\n    }\r\n\r\n\r\n\r\n    takeAfood = () => {\r\n      this.props.feed()\r\n      this.setState((state) => {\r\n      return {food: state.food + 1 }\r\n    });\r\n }\r\n\r\n    feed =  () =>{\r\n      this.props.commonFood > 0 ? this.takeAfood() : alert('not enought food')\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n      id: state.gameObjects.drugId,\r\n      cell: state.gameObjects.cell,\r\n      idToRemove: state.gameObjects.idToRemove,\r\n      commonFood: state.generators.food,\r\n      money: state.trades.money\r\n    };\r\n    return props;\r\n  };\r\n\r\n  const actionCreators = {\r\n    addCow: draggedActions.addCow,\r\n    removeCow: draggedActions.removeCow,\r\n    feed: generators.feed,\r\n    harvester: generators.milkCow,\r\n    spend: trades.discrementmoney,\r\n    getProfit: trades.incrementmoney\r\n  };\r\n  \r\n  export default connect(mapStateToProps, actionCreators)(Cow);","import React from 'react'\r\nimport Drugger from '../../../drugInheritance/drugger/index.js'\r\nimport { Button } from 'reactstrap';\r\nimport './rye.scss' \r\nimport { connect } from 'react-redux';\r\nimport * as draggedActions from '../../../store/dragged/actions';\r\nimport * as generators from '../../../store/generators/actions';\r\nimport * as trades from '../../../store/trades/actions';\r\nimport  {upgrade} from '../../../consts/upgrade.js';\r\nimport  {sellPrice} from '../../../consts/sold.js';\r\nimport  {buyPrice} from '../../../consts/buy.js';\r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport  {names} from '../../../consts/names.js';\r\nimport uniqid from 'uniqid'\r\n\r\nclass Rye extends Drugger{\r\n    constructor(props){\r\n        super(props)\r\n        this.method = this.props.addRye\r\n        this.removeMethod = this.props.removeRye\r\n        this.status = `wait_for_drag-${this.props.name} `\r\n        this.state ={\r\n          status: this.status,\r\n          product:0\r\n         } \r\n         this.generateControlRef = React.createRef()\r\n         this.controlElements =[<Button key = {this.props.ind} className=\"btn-info\" onClick={this.harvest}>{buttontext.ru.harvest}</Button>\r\n         ,<div className = \"generate__indicator\" key = {uniqid()}><div div className = \"scale\" ref = {this.generateControlRef}></div></div>]\r\n         this.cost = buyPrice.rye\r\n         this.sellPrice = sellPrice.rye\r\n         this.contentLocal = names.ru.rye\r\n    }\r\n\r\n    dealOpportunity = () => this.props.money < this.cost ? false : true\r\n\r\n\r\n     generator = () =>{\r\n        let countDown = 0 \r\n        this.interval = setInterval(()=>{\r\n        let ttg = upgrade.rye.timeToGenerate   \r\n        if(this.state.product===0){\r\n          countDown++\r\n          const q = 1/20 * ttg\r\n          this.generateStatusController(q, countDown)\r\n           if(countDown === ttg * 20)\r\n             {this.setState({product:1})\r\n              countDown = 0}\r\n      }\r\n    },50)\r\n  }\r\n }\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n      id: state.gameObjects.drugId,\r\n      cell: state.gameObjects.cell,\r\n      idToRemove: state.gameObjects.idToRemove,\r\n      money: state.trades.money\r\n    };\r\n    return props;\r\n  };\r\n\r\n\r\n\r\n  const actionCreators = {\r\n    addRye: draggedActions.addRye,\r\n    removeRye: draggedActions.removeRye,\r\n    harvester: generators.harvester,\r\n    spend: trades.discrementmoney,\r\n    getProfit: trades.incrementmoney,\r\n  };\r\n  \r\n  export default connect(mapStateToProps, actionCreators)(Rye);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as generators from '../../../store/generators/actions';\r\nimport * as trades from '../../../store/trades/actions';\r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport { Button } from 'reactstrap';\r\nimport './trades.scss'\r\n\r\nclass Trades extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    soldEggs =() =>{\r\n        const {resetEggs, sell} = this.props\r\n        resetEggs();\r\n        sell(6 * this.props.eggs)\r\n    }\r\n    soldMilk =() =>{\r\n        const {resetMilk, sell} = this.props\r\n        sell(15 * this.props.milk)\r\n        resetMilk();\r\n    }\r\n\r\n    render (){\r\n        return <div className=\"sellBtn_wrapper\">\r\n            <Button className ='sellBtn btnEggs' onClick={this.soldEggs}>{buttontext.ru.soldEggs} </Button>\r\n    <Button className ='sellBtn btnMilk' onClick={this.soldMilk}>{buttontext.ru.soldMilk}</Button>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const props = {\r\n        money: state.trades.money,\r\n        eggs: state.generators.eggs,\r\n        milk: state.generators.milk,\r\n    };\r\n    return props;\r\n  };\r\n  \r\n  const actionCreators = {\r\n    resetEggs: generators.resetEggs,\r\n    resetMilk: generators.resetMilk,\r\n    sell: trades.incrementmoney\r\n  };\r\n\r\nexport default connect(mapStateToProps, actionCreators)(Trades);","import  {sellPrice} from './sold.js';\r\nimport  {buyPrice} from './buy.js';\r\n\r\nconst curs ={\r\n    ru:{\r\n       today :\"Курс на сегодня\",\r\n       egg: `Ико купить: ${buyPrice.egg} ед\\\\ продать: ${sellPrice.egg} ед`,\r\n       milk:`Молоко купить: ${buyPrice.milk} ед\\\\ продать: ${sellPrice.milk} ед`,\r\n       chicken : `Курочки купить: ${buyPrice.chicken} ед\\\\ продать: ${sellPrice.chicken} ед`,\r\n       cow: `Коровка купить: ${buyPrice.cow} ед\\\\ продать: ${sellPrice.cow} ед`,\r\n       land:`Земля купить: ${buyPrice.cell} ед\\\\ продать ${sellPrice.cell} ед`,\r\n       rye:`Рош купить: ${buyPrice.rye} ед`\r\n    }\r\n\r\n}\r\n\r\nexport {curs}","import React from 'react';\r\nimport './curs.scss'\r\nimport  {curs} from '../../../consts/curs.js';\r\n\r\nconst Curs = ()=> \r\n    \r\n    <div className = 'curs'>\r\n        <div>{curs.ru.today}</div>\r\n        <div>{curs.ru.chicken}</div>\r\n        <div>{curs.ru.cow}</div>\r\n        <div>{curs.ru.milk}</div>\r\n        <div>{curs.ru.egg}</div>\r\n        <div>{curs.ru.land}</div>\r\n        <div>{curs.ru.rye}</div>\r\n    </div>\r\n\r\nexport default Curs","const product ={\r\n    ru:{\r\n        milk: \"Милк\",\r\n        food: \"Еда\",\r\n        eggs: \"Ики\",\r\n    }\r\n\r\n}\r\n\r\nexport {product}","import React from 'react'\r\nimport Chicken from '../../gameObjects/animals/chickens/chickens.js';\r\nimport Cow from '../../gameObjects/animals/cows/cows.js';\r\nimport Rye from '../../gameObjects/rye/rye.js'\r\nimport arrayCreator from '../../../helpers/arrayCreator.js'\r\nimport Trades from '../trades/trades.js'\r\nimport Curs from '../curs/curs.js'\r\nimport  {product} from '../../../consts/product.js';\r\n\r\n\r\nclass Market extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const chickens = arrayCreator(64).map((el,ind)=><Chicken key={ind} \r\n\r\n            ind = {ind}\r\n            name='chicken' \r\n            product = {product.ru.eggs}\r\n            >\r\n            </Chicken>)\r\n\r\n\r\n            const ryes = arrayCreator(64).map((el,ind)=><Rye key={ind}\r\n            ind = {ind}\r\n            name='rye' \r\n            product = {product.ru.food}\r\n            >\r\n            </Rye>)\r\n\r\n            const cows = arrayCreator(64).map((el,ind)=><Cow key={ind}\r\n            ind = {ind}\r\n            name='cow' \r\n            product = {product.ru.milk}\r\n             >\r\n            </Cow>)\r\n\r\n        return <div>\r\n                    {chickens}\r\n                    {ryes}\r\n                    {cows}\r\n                    <Curs></Curs>\r\n                    <Trades></Trades>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Market"," import React from 'react'\r\n \r\n const instruction ={\r\n   ru:{\r\n    titleRu:'Инструкция',\r\n    'rules1':<div>\r\n        Итак, правила!\r\n        <br></br>\r\n        Цель игры - прогресс.\r\n        <br></br>\r\n        Что это значит?\r\n        <br></br>\r\n        Достижение максимальной прибыли в минимальный промежуток времени. \r\n        <br></br>\r\n        Как измеряется этот показатель? (далее - прибыль)\r\n        <br></br>\r\n        Количество игровой валюты (\"Голда\"), которое игрок заработал за одну минуту. В счет идет чистая прибыль.\r\n        <br></br>\r\n        Важно понимать, что общее число голды, по сути, не приносит никакого статуса. Ибо игрок может  реализовывать продукцию с одной единственной коровы\r\n        <br></br> и накопить таким образом некоторое количество голды. Но рейтинг такого игрока будет гораздо ниже того, кто заработает меньше голды, \r\n        <br></br>\r\n        но за пару минут.\r\n        </div>,\r\n     'rules2':<div>\r\n            Игрок видит два статуса прибыли. \r\n        <br></br>\r\n        1.Прибыль\\мин - последний замереный показатель. \r\n        <br></br>\r\n        2.Лучший показатель - соответсвенно рекорд.\r\n        <br></br>\r\n        Прибыль\\мин - получется когда игрок жмет на кнопку \"декларировать\". Интервал времени для получения показателя\r\n        <br></br>\r\n        берется между двумя нажатиями. \r\n        <br></br>\r\n        К примеру Игрок задекларировал (после оплаты налога!) 100 голды. Спустя 90 секунд задекларировал 400. \r\n        <br></br>\r\n        Соответсвенно чистая прибыль получается 300 голды за 90 секунд. (3.33\\сек) Умножаем на 60 - переводим в минуты - получаем 200 голды\\мин\r\n        <br></br>\r\n        Кнопка \"Декларировать\" является не только триггером к посчету дохода. Это простой способ уплаты игрового налога. Который составляет на старте - 12%\r\n        <br></br>\r\n        С точки зрения игровой механики налог - это ограничивающий момент на сброс интервала времени. \r\n        <br></br>\r\n        Выходит, чем грамотне и продуманее  у игрока развернуто хозяйство - тем выше у него будут показтели прибыли.\r\n        <br></br>\r\n        Налог прогрессивный: чем выше ваш статус и чем больше земли - тем выше налог.\r\n     </div>,\r\n     'rules3':<div>\r\n          Игрок зарабатывает реализовывая игровую продукцию. Это - молоко и яйца (разработчик аутист, поэтому они зовутся в игре \"милк\" и \"ики\" )\r\n         <br></br>\r\n         Производители продукции соответсвено - \"мухрю\" и \"чикены\" (прививки виноваты?)\r\n         <br></br>\r\n          Чикены и Мухрю производят продукцию только когда покормлены.\r\n          <br></br>\r\n          Одна единица еды обеспечивает чикен на 30 секунд нОски. Непрокачанная курица несется раз в 10 секунд.\r\n          <br></br>\r\n          Сытая мухрю дает молоко раз в 20 секунд. Еды ей хватает на 20 секунд.\r\n          <br></br>\r\n          Единица еды обеспечивается пшеницей(рош) раз в 10 секунд. Бесконечно. Но не более одной единицей за жатву. Когда урожай собран - рост возобновляется\r\n          <br></br>\r\n          <br></br>\r\n            Чикены, мухрю и рош покупаются за игровую валюту. Чикенов и мухрю можно продать. Рош - нет. Так как попробуйте продать посеяные семена.\r\n            <br></br>\r\n            Покупка осуществляется перетаскиванием изображения из левой стороны эерана на игровой поле (изначально полей 9)\r\n            <br></br>\r\n            Поля также можно продавать и покупать.\r\n     </div>,\r\n     'rules4':<div>\r\n         Прокаченный чикен несет ико на одну секунду быстрее.\r\n         <br></br>\r\n         Прокаченный мухрю дает на 2 надоя больше за 20 секунд.\r\n         <br></br>\r\n         Максимально прокаченный чикен дает 3 ика за 7 секунд.\r\n         <br></br>\r\n         Максимально прокачанный мухрю дает 5 милка за 20 секунд.\r\n         <br></br>\r\n         Прокачиваются животные автоматически. \r\n         <br></br>\r\n         Когда чикен снесет 100 ик\r\n         <br></br>\r\n         Когда Мухрю даст 30 милка.\r\n         <br></br>\r\n         Можно купить добавки в корм\r\n         <br></br>\r\n         Добавка сокращает время производства ик и милка на 1 секунду\r\n         <br></br>\r\n         Добавка суммируется с прокачкой\r\n         <br></br>\r\n     </div>\r\n   }\r\n        \r\n}\r\n\r\nexport {instruction}\r\n ","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport \"./instruction.scss\"\r\nimport  {instruction} from '../../../consts/text.js';\r\nimport  {buttontext} from '../../../consts/buttontext.js';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nclass Instruction extends React.Component{\r\n\r\n//    constructor(props){\r\n\r\n//    }\r\n    state = {\r\n        rule:'rules1',\r\n        visible:'visible'\r\n    }\r\n    el = document.createElement('div')\r\n    page = 1\r\n    lists = 4\r\n\r\n    \r\n    componentDidMount(){\r\n        document.body.appendChild(this.el)\r\n    }\r\n\r\n    setButton = (sign) =>{\r\n        const page = parseInt(this.state.rule.match(/\\d/g))\r\n        sign === 'plus' ? this.page = page + 1:\r\n        this.page = page - 1\r\n        let rule = `rules${this.page}`\r\n        this.setState({rule})\r\n    }\r\n\r\n    nextHandler = () =>{\r\n        this.setButton('plus')\r\n    }\r\n\r\n    prevHandler = () =>{\r\n        this.setButton()\r\n    }\r\n\r\n    closeOpen = () => {\r\n       this.state.visible === 'visible' ? this.setState({visible:'hide'}) : \r\n       this.setState({visible:'visible'})\r\n    }\r\n\r\n    render(){\r\n        const rules = instruction.ru[this.state.rule]\r\n        const btnClassNext = `nextBtn_${this.page}`\r\n        const btnClassPrev = `prevBtn_${this.page}`\r\n        const popupClass = `popup ${this.state.visible}`\r\n        const closeOpen = this.state.visible === 'visible' ? buttontext.ru.clear : buttontext.ru.notClear\r\n        return ReactDom.createPortal(<div className={popupClass}>\r\n            <div className='instruction'>{instruction.ru.titleRu}{rules}\r\n            <div>{this.page}/{this.lists}</div>\r\n            <Button className = {btnClassPrev} onClick = {this.prevHandler}>{buttontext.ru.prev} </Button>\r\n            <Button className = {btnClassNext} onClick = {this.nextHandler}>{buttontext.ru.next} </Button>\r\n            </div>\r\n        <Button className = 'clear' onClick = {this.closeOpen}>{closeOpen}</Button>\r\n        </div>, this.el)\r\n    }\r\n}\r\n\r\nexport default Instruction","import React from 'react';\r\nimport FarmField from '../gameFoos/field/field.js';\r\nimport InfoList from '../gameFoos/infoList/infoList.js';\r\nimport Market from '../gameFoos/market/market.js';\r\nimport Instruction from '../hopups/instruction/instruction.js';\r\n\r\n\r\n\r\nconst MainHoc = ()=> \r\n    \r\n    <div>\r\n        <FarmField></FarmField>\r\n        <InfoList></InfoList>\r\n        <Market></Market>\r\n        <Instruction></Instruction>\r\n    </div>\r\n\r\nexport default MainHoc","import React from 'react';\r\nimport './App.css';\r\nimport MainHoc from './components/hocs/main.js'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n   <MainHoc></MainHoc>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n    gameObjects:\r\n    {cellCount: 9,\r\n     cellToRemove:false,\r\n     cellToAdd: false,\r\n     cellToRemoveInd: null,\r\n     drugId:null,\r\n     cell:null,   \r\n     position:null},\r\n\r\n    resurses:\r\n   {money:1200},\r\n\r\n    dragged:\r\n   {chickens:0,\r\n    rye:0,\r\n    cow:0},\r\n\r\n    generators:\r\n    {eggs:0,\r\n    milk:0,\r\n    food:0,}\r\n}    \r\n\r\nexport default initialState","import initialState from '../initialState'\r\nimport * as types from './actionTypes'\r\n\r\nconst mapReducer  = (state = initialState.dragged, action) =>{\r\n    switch(action.type){\r\n        case types.addChicken:\r\n            let newValueChic = state.chickens\r\n            newValueChic++\r\n            const incrementChick = {chickens:newValueChic}\r\n            return { ...state, ...incrementChick }    \r\n\r\n        case types.addCow:\r\n            let newValueCow = state.cow\r\n            newValueCow++\r\n            const incrementCow = {cow:newValueCow}\r\n            return { ...state, ...incrementCow }   \r\n            \r\n        case types.addRye:\r\n            let newValueRye = state.rye\r\n            newValueRye++\r\n            const incrementRye = {rye:newValueRye}\r\n            return { ...state, ...incrementRye } \r\n\r\n\r\n        case types.removeChicken:\r\n            let newValueChic2 = state.chickens\r\n            newValueChic2--\r\n            const incrementChick2 = {chickens:newValueChic2}\r\n            return { ...state, ...incrementChick2 }    \r\n    \r\n        case types.removeCow:\r\n            let newValueCow2 = state.cow\r\n            newValueCow2--\r\n            const incrementCow2 = {cow:newValueCow2}\r\n            return { ...state, ...incrementCow2 }   \r\n                \r\n         case types.removeRye:\r\n            let newValueRye2 = state.rye\r\n            newValueRye2--\r\n            const incrementRye2 = {rye:newValueRye2}\r\n            return { ...state, ...incrementRye2 } \r\n \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mapReducer;","import initialState from '../initialState'\r\nimport * as types from './actionTypes'\r\n\r\n\r\nconst mapReducer  = (state = initialState.generators, action) =>{\r\n    switch(action.type){\r\n        case types.harvester:\r\n            let harvest = state.food\r\n            harvest = harvest + action.payload.count\r\n            const incrementHarvest = {food:harvest}\r\n            return { ...state, ...incrementHarvest }    \r\n\r\n        case types.feed:\r\n            let food = state.food\r\n            food--\r\n            const dincrementHarvest = {food}\r\n            return { ...state, ...dincrementHarvest } \r\n\r\n        case types.putEggs:\r\n            let putEgg = state.eggs\r\n            putEgg = putEgg + action.payload.count\r\n            const incremenEgg= {eggs:putEgg}\r\n            return { ...state, ...incremenEgg } \r\n\r\n        case types.milkCow:\r\n            let milk = state.milk\r\n            milk = milk + action.payload.count\r\n            const incrementMilk = {milk}\r\n            return { ...state, ...incrementMilk } \r\n\r\n         case types.resetEggs:\r\n            const nullEgg= {eggs:0}\r\n            return { ...state, ...nullEgg } \r\n    \r\n        case types.resetMilk:\r\n            const nullMilk = {milk:0}\r\n            return { ...state, ...nullMilk } \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mapReducer;","import initialState from '../initialState'\r\nimport * as types from './actionTypes'\r\n\r\n\r\nconst mapReducer  = (state = initialState.gameObjects, action) =>{\r\n    \r\n    switch(action.type){\r\n \r\n        case types.setCurrentId:\r\n            return { ...state, ...action.payload }\r\n\r\n        case types.removeDrag:\r\n            return { ...state, ...action.payload }    \r\n\r\n        case types.setCell:\r\n                return { ...state, ...action.payload } \r\n\r\n        case types.addCell:\r\n                return { ...state, ...action.payload } \r\n                \r\n        case types.removeCell:\r\n                return { ...state, ...action.payload }    \r\n\r\n        case types.cellToRemoveOn:\r\n                return { ...state, ...action.payload }  \r\n                \r\n        case types.cellToRemoveOff:\r\n                return { ...state, ...action.payload } \r\n        \r\n        case types.noCellsToAdd:\r\n                return { ...state, ...action.payload } \r\n                       \r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mapReducer;","import initialState from '../initialState'\r\nimport * as types from './actionTypes'\r\n\r\n\r\nconst mapReducer  = (state = initialState.resurses, action) =>{\r\n    switch(action.type){\r\n    \r\n        case types.incrementmoney:\r\n            let money = state.money\r\n            money = money + action.payload.sum\r\n            const incrementmoney = {money}\r\n            return {state, ...incrementmoney}\r\n\r\n        case types.discrementmoney:\r\n            let money2 = state.money\r\n            money2 = money2 - action.payload.sum\r\n            const discrementmoney = {money:money2}\r\n            return {state, ...discrementmoney}    \r\n            \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mapReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport initStore from './store';\r\nimport { Provider } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst store = initStore();\r\nstore.subscribe(()=>console.log('change'))\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n","import {createStore} from 'redux'\r\nimport createReducer from './reducers'\r\n\r\nexport default () => createStore(createReducer());","import {combineReducers} from 'redux'\r\nimport dragged from './dragged/reducer'\r\nimport generators from './generators/reducer'\r\nimport gameObjects from './gameObjects/reducer'\r\nimport trades from './trades/reducer'\r\n\r\nexport default () =>\r\n  combineReducers({\r\n    dragged,\r\n    generators,\r\n    gameObjects,\r\n    trades\r\n  });\r\n\r\n\r\n"],"sourceRoot":""}