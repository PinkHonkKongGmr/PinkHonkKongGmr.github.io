{"version":3,"sources":["helpers/arrayCreator.js","components/gameObjects/cells/cell.js","store/gameObjects/actions.js","store/gameObjects/actionTypes.js","components/gameFoos/field/field.js","components/gameFoos/infoList/infoList.js","drugInheritance/drugger/index.js","store/generators/actions.js","store/generators/actionTypes.js","components/gameObjects/animals/chickens/chickens.js","store/dragged/actions.js","store/dragged/actionTypes.js","components/gameObjects/animals/cows/cows.js","components/gameObjects/rye/rye.js","components/gameFoos/market/market.js","components/hocs/main.js","App.js","serviceWorker.js","store/initialState.js","store/dragged/reducer.js","store/generators/reducer.js","store/gameObjects/reducer.js","index.js","store/index.js","store/reducers.js"],"names":["arrayCreator","lenght","arr","i","push","Cell","props","onDragOverHandler","e","preventDefault","deleteDrager","removeDrag","state","mountedId","setState","droped","buttonSatus","cellClass","onDropHandler","setCurrentId","setCell","id","dataTransfer","getData","ref","current","React","createRef","className","this","onDrop","onDragOver","Button","onClick","Component","actionCreators","drugId","type","payload","cell","idToRemove","connect","chickCount","dragged","chickens","ryeCount","rye","FarmField","cells","count","map","el","ind","key","infoList","names","infoArray","nameOfClass","cowCount","cow","food","generators","eggs","milk","Drugger","removeController","removeControllerInterval","setInterval","uniqid","container","homeContainer","product","status","clearInterval","interval","removeMethod","onStart","setData","name","onDragEndHandler","method","generator","harvest","harvester","document","createElement","querySelector","appendChild","classNames","value","elemento","draggable","onDragStart","onDragEnd","controlElements","ReactDom","createPortal","feed","Chicken","console","log","takeAfood","commonFood","alert","addChick","removeChick","gameObjects","Cow","addCow","removeCow","newCount","cows","Rye","addRye","removeRye","Market","ryes","MainHoc","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","position","money","mapReducer","action","newValueChic","incrementChick","newValueCow","incrementCow","newValueRye","incrementRye","newValueChic2","incrementChick2","newValueCow2","incrementCow2","newValueRye2","incrementRye2","incrementHarvest","dincrementHarvest","putEgg","incremenEgg","incrementMilk","store","createStore","combineReducers","subscribe","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9595e737.chunk.js","sourcesContent":["\n\nconst arrayCreator =(lenght)=>{\n    const arr =[]\n    for(let i=0;i<lenght;i++){\n        arr.push(i)\n    }\n\n    return arr\n}\n\n\nexport default arrayCreator;","import React from 'react'\nimport { connect } from 'react-redux';\nimport * as actionGameObjects from '../../../store/gameObjects/actions';\nimport { Button } from 'reactstrap';\nimport './cells.scss'\n\n\nclass Cell extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            droped:false,\n            mountedId:null,\n            buttonSatus: 'hidden',\n            cellClass:'cell empty'\n        }\n        \n        this.ref = React.createRef()\n    }\n\n\n    onDragOverHandler =(e)=>{\n        e.preventDefault();\n    }\n\n    deleteDrager =() =>{\n        const  {removeDrag} = this.props\n        removeDrag(this.state.mountedId)\n        this.setState({droped:false, buttonSatus:'hidden', cellClass:'cell empty'})\n    }\n\n    onDropHandler = (e)=>{\n        const  {setCurrentId, setCell} = this.props\n\n       const id =  e.dataTransfer\n        .getData('id');\n\n        const cellClass =  e.dataTransfer\n        .getData('content');\n       \n\n        if (!this.state.droped){\n            this.setState({mountedId:id, droped:true,buttonSatus:'shown', cellClass: `cell ${cellClass}`})\n            setCurrentId(id)\n            setCell(this.ref.current)\n        }\n    }\n \n\n    render(){\n            return <div className= {this.state.cellClass} onDrop = {this.onDropHandler} onDragOver = {this.onDragOverHandler} ref ={this.ref}>\n                <Button onClick={this.deleteDrager} className={this.state.buttonSatus}>Очистить, впизду</Button>    \n            </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const props = {\n      chickCount: state.dragged.chickens,\n      ryeCount: state.dragged.rye,\n    };\n    return props;\n  };\n  \n  const actionCreators = {\n    setCurrentId: actionGameObjects.setCurrentId,\n    setCell: actionGameObjects.setCell,\n    removeDrag: actionGameObjects.removeDrag\n  };\n  \n  export default connect(mapStateToProps, actionCreators)(Cell);\n\n","import * as types from './actionTypes';\n\n  \nexport const setCurrentId = drugId => {\n    return {\n      type: types.setCurrentId,\n      payload: {\n        drugId\n      },\n    };\n  };\n\n  export const removeDrag = idToRemove => {\n    return {\n      type: types.removeDrag,\n      payload: {\n        idToRemove\n      },\n    };\n  };\n\n  export const setCell = cell => {\n    // const position = Object.assign({},pos)\n    return {\n      type: types.setCell,\n      payload:{\n        cell\n      }\n    };\n  };\n","const setCurrentId = 'gameobjects.setCurrentId';\nconst removeDrag = 'gameobjects.removeDrag';\nconst setCell = 'gameobjects.setCell';\n\n\nexport {\n    setCurrentId,\n    removeDrag,\n    setCell\n};","import React from 'react'\nimport arrayCreator from '../../../helpers/arrayCreator.js'\nimport Cell from '../../gameObjects/cells/cell.js'\nimport './field.scss'\n\nclass FarmField extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={}\n    }\n\n    render(){\n    let cells = arrayCreator(this.props.count).map((el,ind)=><Cell key={ind}></Cell>)\n    return <div className='field'>{cells}</div>\n    }\n}\n\nexport default FarmField;","import React from 'react'\nimport { connect } from 'react-redux';\nimport './info.scss' \nimport { dispatch } from 'rxjs/internal/observable/range';\n\n\nclass infoList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={}\n    }\n\n  \n \n    render(){\n        let i = 0;\n        const names = ['Мухрю','Чикены','Рош','Еда', 'Всего ик', 'Надой']\n        const infoArray =[];\n        for (let key in this.props){\n            if(key !== 'dispatch')\n            {\n                const nameOfClass = this.props[key] > 0 ? 'val green' : 'val red'\n                infoArray.push(<div className='value' key ={i}>{names[i]}: <span className={nameOfClass}>{this.props[key]}</span></div>)\n                i++;\n            }\n        }\n    \n        return <div>\n                    {infoArray}\n                </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const props = {\n      cowCount: state.dragged.cow,  \n      chickCount: state.dragged.chickens,\n      ryeCount: state.dragged.rye,\n      food: state.generators.food,\n      eggs: state.generators.eggs,\n      milk: state.generators.milk,\n    };\n    return props;\n  };\n\n\n  \n  export default connect(mapStateToProps)(infoList);","import React from 'react'\nimport uniqid from 'uniqid'\nimport ReactDom from 'react-dom'\nimport './common.scss' \n\n\nclass Drugger extends React.Component{\n    constructor(props){\n        super(props)\n        this.homeContainer = document.createElement('div')\n        document.querySelector('body').appendChild(this.homeContainer)\n        this.container = this.homeContainer\n        this.id = uniqid()\n        this.method = null;\n        this.removeMethod = null;\n        this.state ={dragged:false}\n    }\n\n    removeController =()=>{\n        this.removeControllerInterval = setInterval(()=>{\n            if(this.props.idToRemove===this.id){\n                this.id= uniqid()\n                this.container=this.homeContainer\n                this.setState({dragged:false, product:0, status:this.status})\n                clearInterval(this.interval, this.removeControllerInterval)\n                this.removeMethod()\n                \n            }\n        })\n    }\n\n\n    onStart= (e)=>{\n        e.dataTransfer\n        .setData('id', this.id)\n        e.dataTransfer\n        .setData('content', `${this.props.name}_inside`);\n        \n    }\n\n    onDragEndHandler = () => {\n        if(this.props.id === this.id && !this.state.dragged){\n            this.setState({dragged:true, status:`dragged dragged_${this.props.name}`})\n            this.container = this.props.cell\n            this.removeController()\n            this.method()\n            this.generator()\n                   \n        }\n    }\n\n    harvest=()=>{\n        this.props.harvester(this.state.product)\n        this.setState({product:0})\n    }\n\n    render(){ \n       const classNames = `${this.props.name} ${this.state.status} household`\n       const product = this.state.dragged ? this.props.product : ''  \n       const value = this.state.dragged ? this.state.product : ''    \n\n       const elemento = <div className ={classNames}\n            draggable={!this.state.dragged} \n            onDragStart={this.onStart} \n            onDragEnd={this.onDragEndHandler} \n        >\n\n        <div>{product} {this.state.controlElements}{value}</div>\n        </div>\n\n        \n        return ReactDom.createPortal(elemento, this.container)\n    }\n\n}\n\nexport default Drugger\n\n\n","import * as types from './actionTypes';\n\n\n\nexport const harvester = (count) => {\n    return {\n      type: types.harvester,\n      payload: {\n        count\n      },\n    };\n  };\n\n  export const feed = () => {\n    return {\n      type: types.feed\n    };\n  };\n\n\n\n  export const putEggs = (count) => {\n    return {\n      type: types.putEggs,\n      payload: {\n        count\n      },\n    };\n  };\n\n  export const milkCow = (count) => {\n    return {\n      type: types.milkCow,\n      payload: {\n        count\n      },\n    };\n  };\n","const harvester = 'generators.harvester';\nconst feed = 'generators.feed';\nconst putEggs = 'generators.putEggs';\nconst milkCow = 'generators.milkCow';\n\n\nexport {\n    harvester,\n    feed,\n    putEggs,\n    milkCow\n};","import React from 'react'\nimport Drugger from '../../../../drugInheritance/drugger/index.js'\nimport { Button } from 'reactstrap';\nimport './chickens.scss' \nimport { connect } from 'react-redux';\nimport * as draggedActions from '../../../../store/dragged/actions';\nimport * as generators from '../../../../store/generators/actions';\n\nclass Chicken extends Drugger{\n    constructor(props){\n        super(props)\n        this.method = this.props.addChick\n        this.removeMethod = this.props.removeChick\n        this.status  = `wait_for_drag wait_for_drag-${this.props.name}`\n        this.state ={\n        controlElements:[<Button key = {this.props.ind} className=\"btn-info feed\" onClick={this.feed}>Покормиц</Button>\n                        ,<Button key = {this.props.ind + 'i'} className=\"btn-info harvest\" onClick={this.harvest}>Собрать</Button>],\n        status: this.status,\n        product:0,\n        food:0\n       } \n    }\n\n    generator = () =>{\n    \n      this.interval = setInterval(()=>{\n      if(this.state.food > 0){\n\n      this.setState((state) => {\n        return {food: state.food -1, product:state.product + 1}\n      });    \n    }\n    console.log(this.state.food)\n  },10000)\n }\n\n\n takeAfood = () => {\n  this.props.feed()\n  this.setState((state) => {\n    return {food: state.food + 1 * 3}\n  });\n }\n\n    feed =  () =>{\n      this.props.commonFood > 0 ? this.takeAfood() : alert('not enought food')\n   }\n}\n\n\n\n\nconst mapStateToProps = state => {\n    const props = {\n      id: state.gameObjects.drugId,\n      cell: state.gameObjects.cell,\n      idToRemove: state.gameObjects.idToRemove,\n      commonFood: state.generators.food\n    };\n    return props;\n  };\n\n  const actionCreators = {\n    addChick: draggedActions.addChick,\n    removeChick: draggedActions.removeChick,\n    feed: generators.feed,\n    harvester: generators.putEggs,\n  };\n  \n  export default connect(mapStateToProps, actionCreators)(Chicken);","import * as types from './actionTypes';\n\nexport const addChick = ()=> {\n    return {\n      type: types.addChicken\n    };\n  };\n\n  export const addRye = () => {\n    return {\n      type: types.addRye\n    };\n  };\n\n  \nexport const addCow = newCount => {\n    return {\n      type: types.addCow,\n      payload: {\n        cows: newCount,\n      },\n    };\n  };\n\n  export const removeChick = ()=> {\n    return {\n      type: types.removeChicken\n    };\n  };\n\n  export const removeRye = () => {\n    return {\n      type: types.removeRye\n    };\n  };\n\n  \nexport const removeCow = newCount => {\n    return {\n      type: types.removeCow,\n    };\n  };","const addChicken = 'dragged.addChicken';\nconst addCow = 'dragged.addCow';\nconst addRye = 'dragged.addRye';\nconst removeChicken = 'dragged.removeChicken';\nconst removeCow = 'dragged.removeCow';\nconst removeRye = 'dragged.removeRye';\n\n\nexport {\n    addChicken,\n    addCow,\n    addRye,\n    removeChicken,\n    removeCow,\n    removeRye\n};","import React from 'react'\nimport Drugger from '../../../../drugInheritance/drugger/index.js'\nimport { Button } from 'reactstrap';\nimport './cows.scss' \nimport { connect } from 'react-redux';\nimport * as draggedActions from '../../../../store/dragged/actions';\nimport * as generators from '../../../../store/generators/actions';\n\nclass Cow extends Drugger{\n    constructor(props){\n        super(props)\n        this.method = this.props.addCow\n        this.removeMethod = this.props.removeCow\n        this.status  = `wait_for_drag wait_for_drag-${this.props.name}`\n        this.state ={\n        controlElements:[<Button key = {this.props.ind} className=\"btn-info feed\" onClick={this.feed}>Покормиц</Button>,\n                         <Button key = {this.props.ind + 'i'} className=\"btn-info harvest\" onClick={this.harvest}>Собрать</Button>],\n        status: this.status,\n        product:0,\n        food:0\n       } \n    }\n\n    generator = () =>{\n    \n      this.interval = setInterval(()=>{\n      if(this.state.food > 0){\n\n      this.setState((state) => {\n        return {food: state.food -1, product:state.product + 1}\n      });    \n    }\n    console.log(this.state.food)\n  },20000)\n }\n\n\n takeAfood = () => {\n  this.props.feed()\n  this.setState((state) => {\n    return {food: state.food + 1 }\n  });\n }\n\n    feed =  () =>{\n      this.props.commonFood > 0 ? this.takeAfood() : alert('not enought food')\n   }\n}\n\n\n\n\nconst mapStateToProps = state => {\n    const props = {\n      id: state.gameObjects.drugId,\n      cell: state.gameObjects.cell,\n      idToRemove: state.gameObjects.idToRemove,\n      commonFood: state.generators.food\n    };\n    return props;\n  };\n\n  const actionCreators = {\n    addCow: draggedActions.addCow,\n    removeCow: draggedActions.removeCow,\n    feed: generators.feed,\n    harvester: generators.milkCow,\n  };\n  \n  export default connect(mapStateToProps, actionCreators)(Cow);","import React from 'react'\nimport Drugger from '../../../drugInheritance/drugger/index.js'\nimport { Button } from 'reactstrap';\nimport './rye.scss' \nimport { connect } from 'react-redux';\nimport * as draggedActions from '../../../store/dragged/actions';\nimport * as generators from '../../../store/generators/actions';\n\nclass Rye extends Drugger{\n    constructor(props){\n        super(props)\n        this.method = this.props.addRye\n        this.removeMethod = this.props.removeRye\n        this.status = `wait_for_drag-${this.props.name} `\n        this.state ={\n          controlElements:[<Button key = {this.props.ind} className=\"btn-info\" onClick={this.harvest}>Пожать</Button>],\n          status: this.status,\n          product:0\n         } \n    }\n\n     generator = () =>{\n        this.interval = setInterval(()=>{\n        if(this.state.product===0){\n        this.setState({product:1})\n      }\n    },10000)\n  }\n\n\n\n }\n\n\n\nconst mapStateToProps = state => {\n    const props = {\n      id: state.gameObjects.drugId,\n      cell: state.gameObjects.cell,\n      idToRemove: state.gameObjects.idToRemove\n    };\n    return props;\n  };\n\n\n\n  const actionCreators = {\n    addRye: draggedActions.addRye,\n    removeRye: draggedActions.removeRye,\n    harvester: generators.harvester,\n  };\n  \n  export default connect(mapStateToProps, actionCreators)(Rye);","import React from 'react'\nimport Chicken from '../../gameObjects/animals/chickens/chickens.js';\nimport Cow from '../../gameObjects/animals/cows/cows.js';\nimport Rye from '../../gameObjects/rye/rye.js'\nimport arrayCreator from '../../../helpers/arrayCreator.js'\n\n\nclass Market extends React.Component{\n\n    constructor(props){\n        super(props)\n        \n    }\n\n\n    render(){\n\n        const chickens = arrayCreator(64).map((el,ind)=><Chicken key={ind} \n\n            ind = {ind}\n            name='chicken' \n            product = 'Ики'\n            >\n            </Chicken>)\n\n\n            const ryes = arrayCreator(64).map((el,ind)=><Rye key={ind}\n            ind = {ind}\n            name='rye' \n            product = 'Пишша'\n            >\n            </Rye>)\n\n            const cows = arrayCreator(64).map((el,ind)=><Cow key={ind}\n            ind = {ind}\n            name='cow' \n            product = 'Милк'\n             >\n            </Cow>)\n\n        return <div>\n                    {chickens}\n                    {ryes}\n                    {cows}\n        </div>\n    }\n}\n\nexport default Market","import React from 'react';\nimport FarmField from '../gameFoos/field/field.js';\nimport InfoList from '../gameFoos/infoList/infoList.js';\nimport Market from '../gameFoos/market/market.js';\n\n\n\n\nconst MainHoc = ()=> \n    \n    <div>\n        <FarmField count={9}></FarmField>\n        <InfoList></InfoList>\n        <Market></Market>\n    </div>\n\nexport default MainHoc","import React from 'react';\nimport './App.css';\nimport MainHoc from './components/hocs/main.js'\n\n\nfunction App() {\n  return (\n   <MainHoc></MainHoc>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n    gameObjects:\n    {drugId:null,\n     cell:null,   \n    position:null},\n    money:200,\n    dragged:\n   { chickens:0,\n    rye:0,\n    cow:0\n},\n    generators:{\n    eggs:0,\n    milk:0,\n    food:0,}\n}    \n\nexport default initialState","import initialState from '../initialState'\nimport * as types from './actionTypes'\n\nconst mapReducer  = (state = initialState.dragged, action) =>{\n    switch(action.type){\n        case types.addChicken:\n            let newValueChic = state.chickens\n            newValueChic++\n            const incrementChick = {chickens:newValueChic}\n            return { ...state, ...incrementChick }    \n\n        case types.addCow:\n            let newValueCow = state.cow\n            newValueCow++\n            const incrementCow = {cow:newValueCow}\n            return { ...state, ...incrementCow }   \n            \n        case types.addRye:\n            let newValueRye = state.rye\n            newValueRye++\n            const incrementRye = {rye:newValueRye}\n            return { ...state, ...incrementRye } \n\n\n        case types.removeChicken:\n            let newValueChic2 = state.chickens\n            newValueChic2--\n            const incrementChick2 = {chickens:newValueChic2}\n            return { ...state, ...incrementChick2 }    \n    \n        case types.removeCow:\n            let newValueCow2 = state.cow\n            newValueCow2--\n            const incrementCow2 = {cow:newValueCow2}\n            return { ...state, ...incrementCow2 }   \n                \n         case types.removeRye:\n            let newValueRye2 = state.rye\n            newValueRye2--\n            const incrementRye2 = {rye:newValueRye2}\n            return { ...state, ...incrementRye2 } \n \n        default:\n            return state\n    }\n}\n\nexport default mapReducer;","import initialState from '../initialState'\nimport * as types from './actionTypes'\n\n\nconst mapReducer  = (state = initialState.generators, action) =>{\n    switch(action.type){\n        case types.harvester:\n            let harvest = state.food\n            harvest = harvest + action.payload.count\n            const incrementHarvest = {food:harvest}\n            return { ...state, ...incrementHarvest }    \n\n        case types.feed:\n            let food = state.food\n            food--\n            const dincrementHarvest = {food}\n            return { ...state, ...dincrementHarvest } \n\n        case types.putEggs:\n            let putEgg = state.eggs\n            putEgg = putEgg + action.payload.count\n            const incremenEgg= {eggs:putEgg}\n            return { ...state, ...incremenEgg } \n\n        case types.milkCow:\n            let milk = state.milk\n            milk = milk + action.payload.count\n            const incrementMilk = {milk}\n            return { ...state, ...incrementMilk } \n\n        default:\n            return state\n    }\n}\n\nexport default mapReducer;","import initialState from '../initialState'\nimport * as types from './actionTypes'\n\nconst mapReducer  = (state = initialState.gameObjects, action) =>{\n    \n    switch(action.type){\n \n        case types.setCurrentId:\n            return { ...state, ...action.payload }\n\n        case types.removeDrag:\n            return { ...state, ...action.payload }    \n\n        case types.setCell:\n                return { ...state, ...action.payload } \n\n            \n        default:\n            return state\n    }\n}\n\nexport default mapReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport initStore from './store';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst store = initStore();\nstore.subscribe(()=>console.log('change'))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.register();\n","import {createStore} from 'redux'\nimport createReducer from './reducers'\n\nexport default () => createStore(createReducer());","import {combineReducers} from 'redux'\nimport dragged from './dragged/reducer'\nimport generators from './generators/reducer'\nimport gameObjects from './gameObjects/reducer'\n\nexport default () =>\n  combineReducers({\n    dragged,\n    generators,\n    gameObjects\n  });\n\n\n"],"sourceRoot":""}