{"version":3,"sources":["assets/pokelogo.png","components/pokemonList/index.js","components/pokemonList/pokemonList.jsx","components/startPage/index.js","components/startPage/startPage.jsx","store/actions.js","store/types.js","components/loader/index.js","components/loader/loader.jsx","components/pokemon/index.js","components/pokemon/pokemon.jsx","components/ability/index.js","components/ability/ability.jsx","App.js","store/nextReducer.js","store/abilitiesReducer.js","index.js","store/index.js","store/reducers.js"],"names":["module","exports","PokemonList","props","useState","list","setList","useEffect","mapPokemonsToDom","map","el","ind","link","key","className","to","toUpperCase","slice","type","onInput","e","length","target","value","filter","match","placeholder","startPage","pokemons","setPokemons","dispatch","useDispatch","count","useSelector","state","next","show","fetch","then","response","json","res","results","name","src","require","default","onClick","Loader","Pokemon","pokemonInfo","setPokemonInfo","id","about","abilities","sprite","sprites","front_default","back_default","types","base_experience","height","weight","abilityList","ability","linkback","payLoad","url","getAbilityUrl","Ability","abilityUrl","abilityUrlBack","urlBack","data","setData","result","effect_changes","reserveData","discription","effect_entries","effect","short_effect","localStorage","setItem","JSON","stringify","getItem","parse","App","path","component","StartPage","exact","render","params","initState","nextReducer","action","abilityReducer","store","createStore","combineReducers","subscribe","console","log","ReactDom","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.049a7d9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokelogo.1008be14.png\";","import PokemonList from './pokemonList.jsx';\r\nexport default PokemonList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokemonList = (props) => {\r\n    const [list, setList] = useState(props.list);\r\n    useEffect(() => setList(props.list), [props]);\r\n    const filtration = (e) =>\r\n        setList(list.length && e.target.value ? list.filter((el) => el.match(e.target.value)) : props.list);\r\n    const mapPokemonsToDom = list.map((el, ind) => {\r\n        const link = `/pokemon/${el}`;\r\n        return (\r\n            <div key={ind} className=\"flip-container\">\r\n                <div className=\"flipper\">\r\n                    <Link to={link}>\r\n                        <div className=\"pokemon_box\">\r\n                            <div className=\"pokemon-name\">{el[0].toUpperCase() + el.slice(1)}</div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"input-box\">\r\n                {' '}\r\n                <input type=\"text\" onInput={filtration} placeholder=\"поиск по покемону\" />\r\n            </div>\r\n            <div className=\"pokemon_cards__wrapper\">{mapPokemonsToDom}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokemonList;\r\n","import startPage from './startPage.jsx';\r\nexport default startPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goForward, goBack } from '../../store/actions';\r\nimport PokemonList from '../pokemonList';\r\n\r\nconst StartPage = () => {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const count = useSelector((state) => state.next.show);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon?limit=20&offset=${count}`)\r\n            .then((response) => response.json())\r\n            .then((res) => res.results.map((el) => el.name))\r\n            .then((results) => {\r\n                setPokemons(results);\r\n            });\r\n    }, [count]);\r\n\r\n    return (\r\n        <div className=\"main_container\">\r\n            <div className=\"logo-box\">\r\n                <img src={require('../../assets/pokelogo.png').default} />\r\n            </div>\r\n\r\n            <div className=\"button-box\">\r\n                <button onClick={() => dispatch(goBack())}>previosly</button>\r\n                <button onClick={() => dispatch(goForward())}>next</button>\r\n            </div>\r\n            <PokemonList list={pokemons} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartPage;\r\n","import { forward, back, defineAbilityUrl, setUrlToGoBack } from './types';\r\n\r\nexport const goForward = () => ({ type: forward });\r\nexport const goBack = () => ({ type: back });\r\nexport const getAbilityUrl = (url) => ({ type: defineAbilityUrl, payLoad: url });\r\nexport const getUrlToGoBack = (url) => ({ type: setUrlToGoBack, payLoad: url });\r\n","export const forward = 'go_forward';\r\nexport const back = 'go_back';\r\nexport const defineAbilityUrl = 'define_Ability_Url';\r\nexport const setUrlToGoBack = 'set_Url_ToGoBack';\r\n","import Loader from './loader.jsx';\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Loader = () => (\r\n    <div className=\"lds-ripple\">\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;\r\n","import Pokemon from './pokemon.jsx';\r\nexport default Pokemon;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAbilityUrl, getUrlToGoBack } from '../../store/actions';\r\nimport Loader from '../loader';\r\n\r\nconst Pokemon = (props) => {\r\n    const [pokemonInfo, setPokemonInfo] = useState({});\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${props.id}`)\r\n            .then((res) => res.json())\r\n            .then((about) => setPokemonInfo(about));\r\n    }, []);\r\n    if (pokemonInfo.abilities) {\r\n        const sprite = (\r\n            <div className=\"pokemon__info\">\r\n                <img src={pokemonInfo.sprites.front_default} />\r\n                <img src={pokemonInfo.sprites.back_default} />\r\n                <div>Type: {pokemonInfo.types[0].type.name}</div>\r\n                <div>Base experience: {pokemonInfo.base_experience}</div>\r\n                <div>Height: {pokemonInfo.height}</div>\r\n                <div>Weight: {pokemonInfo.weight}</div>\r\n            </div>\r\n        );\r\n        const abilityList = pokemonInfo.abilities.map((el, ind) => {\r\n            const link = `/abilities/${el.ability.name}`;\r\n            const linkback = `/pokemon/${pokemonInfo.name}`;\r\n            return (\r\n                <li className=\"pokemon_info_list\" key={ind}>\r\n                    <Link\r\n                        to={link}\r\n                        onClick={() => {\r\n                            dispatch(getUrlToGoBack(linkback));\r\n                            dispatch(getAbilityUrl(el.ability.url));\r\n                        }}>\r\n                        {el.ability.name}\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n                <h2>{props.id.toUpperCase()}</h2>\r\n                {sprite}\r\n                <h3>Способности:</h3>\r\n                <ul>{abilityList}</ul>\r\n                <Link to=\"/\">На главную</Link>\r\n            </div>\r\n        );\r\n    } else return <Loader />;\r\n};\r\n\r\nexport default Pokemon;\r\n","import Ability from './ability.jsx';\r\nexport default Ability;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../loader';\r\n\r\nconst Ability = () => {\r\n    const abilityUrl = useSelector((state) => state.ability.url);\r\n\r\n    const abilityUrlBack = useSelector((state) => state.ability.urlBack);\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        fetch(abilityUrl)\r\n            .then((res) => res.json())\r\n            .then((result) => setData(result));\r\n    }, [abilityUrl]);\r\n\r\n    if (data.effect_changes) {\r\n        const reserveData = {\r\n            name: data.name,\r\n            discription: data.effect_entries[0].effect,\r\n            effect: data.effect_entries[0].short_effect,\r\n        };\r\n        localStorage.setItem('reserveData', JSON.stringify(reserveData));\r\n        return (\r\n            <div className=\"ability-box\">\r\n                <div>\r\n                    <span className=\"name\">name:</span>\r\n                    {data.name}\r\n                </div>\r\n                <div>\r\n                    <span className=\"discription\">discription:</span>\r\n                    {data.effect_entries[0].effect}\r\n                </div>\r\n                <div>\r\n                    <span className=\"effect\">effect:</span>\r\n                    {data.effect_entries[0].short_effect}\r\n                </div>\r\n                <div>\r\n                    <Link to={abilityUrlBack}>Назад к покемону</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        if (localStorage.getItem('reserveData')) {\r\n            const reserveData = JSON.parse(localStorage.getItem('reserveData'));\r\n\r\n            return (\r\n                <div className=\"ability-box\">\r\n                    <div>\r\n                        <span className=\"name\">name:</span>\r\n                        {reserveData.name}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"discription\">discription:</span>\r\n                        {reserveData.discription}\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"effect\">effect:</span>\r\n                        {reserveData.effect}\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/\">На главную</Link>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    return <Loader />;\r\n};\r\n\r\nexport default Ability;\r\n","import React from 'react';\r\nimport StartPage from './components/startPage';\r\nimport Pokemon from './components/pokemon';\r\nimport Ability from './components/ability';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/\" component={StartPage} exact />\r\n            <Route path=\"/pokemon/:id\" render={(props) => <Pokemon id={props.match.params.id} />} />\r\n            <Route path=\"/abilities/:id\" render={() => <Ability />} />\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","import { forward, back } from './types';\r\n\r\nconst initState = {\r\n    show: 0,\r\n};\r\n\r\nexport const nextReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case forward:\r\n            return { ...state, show: state.show + 20 };\r\n        case back:\r\n            return { ...state, show: state.show - 20 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { defineAbilityUrl, setUrlToGoBack } from './types';\r\n\r\nconst initState = {\r\n    url: null,\r\n    urlBack: null,\r\n};\r\n\r\nexport const abilityReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case defineAbilityUrl:\r\n            return { ...state, url: action.payLoad };\r\n        case setUrlToGoBack:\r\n            return { ...state, urlBack: action.payLoad };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import './style/styles.scss';\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App.js';\r\nimport initStore from './store';\r\nimport { Provider } from 'react-redux';\r\nconst store = initStore();\r\nstore.subscribe(() => console.log('some'));\r\nReactDom.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t{' '}\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n","import { createStore } from 'redux';\r\nimport createReducer from './reducers';\r\n\r\nexport default () => createStore(createReducer());\r\n","import { combineReducers } from 'redux';\r\nimport { nextReducer } from './nextReducer';\r\nimport { abilityReducer } from './abilitiesReducer';\r\n\r\nexport default () =>\r\n    combineReducers({\r\n        next: nextReducer,\r\n        ability: abilityReducer,\r\n    });\r\n"],"sourceRoot":""}